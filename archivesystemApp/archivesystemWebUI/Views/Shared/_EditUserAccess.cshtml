
@model archivesystemWebUI.Models.EditUserViewModel


<div class="modal-header">
    <h5 class="modal-title">Update User Access Details</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="modal-body">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @using (Html.BeginForm("EditUser", "UserAccess", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.AccessDetails.Id)
        @Html.HiddenFor(model => model.AccessDetails.EmployeeId)
        @Html.HiddenFor(model => model.AccessDetails.AccessCode)

        <div class="form-group">
            @Html.LabelFor(model => model.RegenerateCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.RegenerateCode, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegenerateCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessDetails.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.AccessDetails.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccessDetails.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessDetails.AccessLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AccessDetails.AccessLevelId, new SelectList(Model.AccessLevels, "Id", "Level"), "Select Access Level", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccessDetails.AccessLevel, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group text-center">
            <button class="btn btn-primary " type="submit">Update</button>
        </div>
    }
    @*@using (Html.BeginForm("EditUser", "UserAccess", FormMethod.Post, new { @class = "form-horizontal", role = "form" , id ="EditUserAccessForm"}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.AccessDetails.Id)
            @Html.HiddenFor(model => model.AccessDetails.EmployeeId)
            @Html.HiddenFor(model => model.AccessDetails.AccessCode)
            @Html.HiddenFor(model => model.AccessDetails.Employee.Name)

            <div class="form-group">
                @Html.LabelFor(model => model.RegenerateCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.RegenerateCode, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RegenerateCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccessDetails.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.AccessDetails.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccessDetails.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccessLevels, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AccessLevels, new SelectList(Model.AccessLevels, "Id", "Level"), "Select Access Level", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccessLevels, "", new { @class = "text-danger" })
                </div>
            </div>




                <div class="form-group text-center">
                <button class="btn btn-primary " onclick="editPost('/UserAccess/EditUserAccess/')" type="button">Update</button>
            </div>
        }*@
</div>
   


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
